#!/bin/bash

set -ex

export QA_TEST=1

test_shell()
{
  mkdir -p .shellcheck
  find . -path ./.git -prune -o -path "*.py" -prune -o -type f -exec grep -Eq '^#!(.*/|.*env +)(sh|bash|ksh)' {} \; -print |
    while IFS="" read -r file
    do
      # collect all warnings
      shellcheck --format=checkstyle "$file" > .shellcheck/$(basename ${file}).log || true
      # fail on >=error
      shellcheck --severity error "$file"
    done
}

# fails on error and ignores other levels
test_shell_error()
{
  # Shellcheck
  find . -path ./.git -prune -o -path "*.py" -prune -o -type f -exec grep -Eq '^#!(.*/|.*env +)(sh|bash|ksh)' {} \; -print |
    while IFS="" read -r file
    do
      # with recent shellcheck, "-S error" replaces this hack
      # kept as this runs on machines running rudder-dev
      shellcheck --format gcc "$file" | grep " error: " && exit 1 || true
    done
}

# verify that each file has a correct license header
test_license_header()
{
  find . -name '*.cf' -o -name '*.st' -print0 |
    while IFS= read -r -d '' file; do
      if ! grep -qE "# SPDX-FileCopyrightText.*" $file; then
        # Ignore very small files
        if [ `wc -l $file | awk '{print $1}'` -gt "10" ]; then
          echo "$file is missing a correct license header"
          exit 1
        fi
      fi
    done
}

test_windows_techniques()
{
  if [ ! -f rudder-templates-cli.jar ]; then
    wget https://repository.rudder.io/build-dependencies/rudder-templates-cli/rudder-templates-cli.jar
  fi
  for technique in $(find techniques -type d -regex ".*[0-9]+\(.[0-9]+\)?")
  do
    tmp_dir=$(mktemp -d -t qa-test-XXXXXXXXXX)
    cp -r $technique/* $tmp_dir
    for file in $(find $technique -name "*.ps1.st")
    do
      baseFile=$(basename $file .ps1.st)
      renderedFile=$tmp_dir/$baseFile.ps1
      java -Dfile.encoding=UTF-8 -jar rudder-templates-cli.jar --outdir $tmp_dir -p variables.json $file
    done
    pwsh -command "Invoke-ScriptAnalyzer -Path ${tmp_dir} -Settings ./PSScriptAnalyzerSettingsPolicy.psd1 -EnableExit -ReportSummary"
    rm -rf $tmp_dir
  done
}

if [ "$1" = "--shell" ]; then
  test_shell
  exit 0
elif [ "$1" = "--license" ]; then
  test_license_header
elif [ "$1" = "--dsc" ]; then
  test_windows_techniques
else
  # quick tests to be launched during merge
  test_shell_error
  make test
fi
