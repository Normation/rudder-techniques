#####################################################################################
# Copyright 2011 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

#######################################################
#
# Server specific configuration
#
#######################################################

bundle server access_rules
{
  access:

    policy_server::
      "root"
        handle => "policy_server_uuid",
        resource_type => "literal",
        admit => {".*"};

      "${def.dir_masterfiles}"
        handle => "grant_access_policy",
        comment => "Grant access to the policy updates",
        maproot => {  @{def.acl}  },
        admit   => {  @{def.acl}  };

      "${g.rudder_tools}"
        maproot => {  @{def.acl}  },
        admit   => {  @{def.acl}  };

      "${g.rudder_ncf_origin_common}"
        maproot => {  @{def.acl}  },
        admit   => {  @{def.acl}  };

      "${g.rudder_ncf_origin_local}"
        maproot => {  @{def.acl}  },
        admit   => {  @{def.acl}  };

    any::

      # the policy server must have access to the cfengine folder
      "${sys.workdir}"
        maproot => { host2ip("${server_info.cfserved}"), string_downcase(escape("${server_info.cfserved}"))  },
        admit   => { host2ip("${server_info.cfserved}"), string_downcase(escape("${server_info.cfserved}"))  };

  roles:
      # Allow user root to set any class
      ".*"  authorize => { "root" };
}

bundle common def
{
  vars:
      "policy_server_file" string => translatepath("${sys.workdir}/policy_server.dat"),
        comment => "Path to file containing address to policy server";

      "policy_server"      string => readfile("${policy_server_file}", 2048),
        comment => "IP address or hostname to locate your policy host.";

      "dir_masterfiles" string => translatepath("${sys.workdir}/masterfiles");

   # List here the IP masks that we grant access to on the server

    policy_server::
      "acl" slist => {
      "%%POLICY_SERVER_ALLOWED_NETWORKS%%"
    };
    !policy_server::
      "acl" slist => {
      "${def.policy_server}"
    };
}


body server control
{
        trustkeysfrom     => {
      "127.0.0.0/8" , "::1",
        @{def.acl} ,
          host2ip("${server_info.cfserved}"), "${server_info.cfserved}"
  }; #trustkey allows the exchange of keys
        allowconnects     => {
       @{def.acl} ,
          host2ip("${server_info.cfserved}"), "${server_info.cfserved}"
  };


        maxconnections    => "1000";
        logallconnections => "true";

        cfruncommand      => "${sys.workdir}/bin/cf-agent -f failsafe.cf && ${sys.workdir}/bin/cf-agent";
        allowusers        => { "root" };

    community_edition::
        port => "5309";

}

