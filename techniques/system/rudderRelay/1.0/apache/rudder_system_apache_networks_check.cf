bundle agent rudder_system_apache_networks_check {
  vars:
      "policy_server_ip"     string => host2ip("${server_info.policy_server}");
    server_ip_found::
      "policy_server_acl"    slist => { "127.0.0.0/8", "::1",  "${policy_server_ip}" };
    !server_ip_found::
      "policy_server_acl"    slist => { "127.0.0.0/8", "::1" };

    any::
      "defacl"               slist => filter("0.0.0.0/0", "def.acl", "false", "true", "99999");
      "nodes_acl_24"         slist => maplist("Require ip ${this}", "defacl");
      "nodes_generate_24"    string => join("${const.n}","nodes_acl_24");

      "allowed_network_file" string => "${g.rudder_base}/etc/rudder-networks-24.conf";
      "remote_run_file"      string => "${g.rudder_base}/etc/rudder-networks-policy-server-24.conf";

      "allowed_network_prefix" string => canonify("file_content_${allowed_network_file}");
      "remote_run_prefix" string => canonify("file_content_${remote_run_file}");


    server_ip_found::
      "remote_run_acl"       string => "Require local${const.n}Require ip ${policy_server_ip}";
    !server_ip_found::
      "remote_run_acl"       string => "Require local";


    has_all_granted::
      "allowed_network_acl"          string => "Require all granted";
    !has_all_granted::
      "allowed_network_acl"          string => "${nodes_generate_24}";

  classes:
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

      "has_all_granted" expression => some("0.0.0.0/0", "def.acl");
      "server_ip_found" expression => regcmp("^[0-9.]+$|^[0-9a-fA-F:]+:[0-9a-fA-F:]+$", "${policy_server_ip}");

      # Restart apache at the end of the technique if needed
      "system_restart_apache" expression => "${allowed_network_prefix}_repaired|${remote_run_prefix}_repaired",
                                   scope => "namespace";

  methods:
    pass3::
      # Allowed networks
      "any" usebundle => _method_reporting_context("Apache allowed networks permissions", "None");
      "any" usebundle => permissions("${allowed_network_file}", "600", "root", "0");
      "any" usebundle => _method_reporting_context("Apache allowed networks configuration", "None");
      "any" usebundle => file_content("${allowed_network_file}", "${allowed_network_acl}", "true");

      # Remote run
      "any" usebundle => _method_reporting_context("Apache allowed remote run permissions", "None");
      "any" usebundle => permissions("${remote_run_file}", "600", "root", "0");
      "any" usebundle => _method_reporting_context("Apache allowed remote run configuration", "None");
      "any" usebundle => file_content("${remote_run_file}", "${remote_run_acl}", "true");
}
