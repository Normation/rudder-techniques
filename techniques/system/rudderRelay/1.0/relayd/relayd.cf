bundle agent rudder_system_relayd_configuration {
  vars:
      "config_dir"         string => "${g.rudder_base}/etc/relayd";
      "config_file"        string => "${config_dir}/main.conf2";
      "relayd_service"     string => "rudder-relayd";

      "config_class_prefix" string => canonify("file_from_template_${config_file}");

  methods:
      "any" usebundle => _method_reporting_context("Relayd configuration permissions", "None");
      "any" usebundle => permissions_recursive("${config_dir}", "640", "root", "rudder");

      "any" usebundle => _method_reporting_context("Relayd configuration", "None");
      "any" usebundle => file_from_template_mustache("${this.promise_dirname}/relayd.conf.tpl", "${config_file}");

      "any" usebundle => _method_reporting_context("Relayd service started", "None");
      "any" usebundle => service_started("${relayd_service}");

      "any" usebundle => _method_reporting_context("Relayd service enabled", "None");
      "any" usebundle => service_enabled("${relayd_service}");

      # Restart relayd at the end of the technique if needed
      "system_restart_relayd" expression => "${config_class_prefix}_repaired",
                                   scope => "namespace";
}
