# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2021 Normation SAS

bundle agent send_rudder_report(path) {
  vars:
      "c_path"   string => canonify("${path}");
      "endpoint" string => "https://${server_info.policy_server}/reports/";

  files:
      "${path}"
        delete  => tidy,
        if      => "send_report_${c_path}_ok",
        classes => classes_generic("tidy_report_${c_path}");

  methods:
      "any" usebundle => rudder_common_report("Common", "log_warn", "${system_common.directiveId}", "Log system for reports", "None", "Could not send report ${path}"),
                   if => "send_report_${c_path}_error";
      # May be a another done by another agent run
      "any" usebundle => rudder_common_report("Common", "log_warn", "${system_common.directiveId}", "Log system for reports", "None", "Could not remove report ${path}"),
                   if => "tidy_report_${c_path}_error";

  commands:
      "/opt/rudder/bin/rudder-client -e /reports/ -- --upload-file ${path}"
        classes => classes_generic_two("send_report_${c_path}", "send_rudder_reports");
}

bundle agent send_rudder_reports
{
  vars:
      "raw_reports" slist => lsdir("${g.rudder_reports}/ready/", ".+\.log\.gz", "false");
      # Max 50 reports by run to avoid blocking the agent too long after a long
      # disconnection
      "reports"     slist => sublist("raw_reports", "head", 50);
      "nb_reports"  int   => length("reports");

  classes:
      "has_reports" not => strcmp("${nb_reports}", "0");

  methods:
    has_reports::
      "send"    usebundle => send_rudder_report("${g.rudder_reports}/ready/${reports}");
      "cleanup" usebundle => _classes_sanitize("send_rudder_reports");
    !has_reports::
      "cleanup" usebundle => _classes_success("send_rudder_reports");
    any::
      "report"  usebundle => rudder_common_reports_generic("Common", "send_rudder_reports", "${system_common.directiveId}", "Log system for reports", "None", "Reports forwarding to policy server");

      "cleanup" usebundle => clean_old_rudder_reports;
}

bundle agent clean_old_rudder_reports
{
  files:
      "${g.rudder_reports}/ready/"
        delete => tidy,
        file_select => days_old("7"),
        depth_search => recurse("inf");
}

