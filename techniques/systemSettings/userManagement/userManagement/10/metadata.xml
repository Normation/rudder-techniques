
<TECHNIQUE name="Users">
  <DESCRIPTION>This technique manages the target host(s) users.
  It will ensure that the defined users are present on the system.</DESCRIPTION>
  <MULTIINSTANCE>true</MULTIINSTANCE>
  <POLICYGENERATION>separated</POLICYGENERATION>

  <AGENT type="dsc">
    <BUNDLES>
      <NAME>check_usergroup_user_parameters_RudderUniqueID</NAME>
    </BUNDLES>
    <TMLS>
      <TML name="userManagement.ps1"/>
    </TMLS>
  </AGENT>

  <AGENT type="cfengine-community">
    <BUNDLES>
      <NAME>check_usergroup_user_parameters_RudderUniqueID</NAME>
    </BUNDLES>
    <TMLS>
      <TML name="userManagement"/>
    </TMLS>
  </AGENT>

  <TRACKINGVARIABLE>
    <SAMESIZEAS>USERGROUP_USER_LOGIN</SAMESIZEAS>
  </TRACKINGVARIABLE>

  <SECTIONS>
    <!-- users section , index 1 -->
    <SECTION name="Users" multivalued="true" component="true" componentKey="USERGROUP_USER_LOGIN">
      <INPUT>
        <NAME>USERGROUP_USER_LOGIN</NAME>
        <DESCRIPTION>Login name for this account</DESCRIPTION>
        <CONSTRAINT>
          <REGEX error="User login with comma are not supported.">[^,]+</REGEX>
        </CONSTRAINT>
      </INPUT>
      <SELECT1>
        <NAME>USERGROUP_USER_ACTION</NAME>
        <DESCRIPTION>Policy to apply on this account</DESCRIPTION>
        <ITEM>
          <LABEL>Create / update</LABEL>
          <VALUE>add</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Remove</LABEL>
          <VALUE>remove</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Check only (account should exist)</LABEL>
          <VALUE>checkhere</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Check only (account should not exist)</LABEL>
          <VALUE>checknothere</VALUE>
        </ITEM>
        <CONSTRAINT>
          <DEFAULT>add</DEFAULT>
        </CONSTRAINT>
      </SELECT1>
      <SELECT1>
        <NAME>USERGROUP_USER_PASSWORD_POLICY</NAME>
        <DESCRIPTION>How often do you want to check the password</DESCRIPTION>
        <ITEM>
          <LABEL>At account creation</LABEL>
          <VALUE>oneshot</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Everytime</LABEL>
          <VALUE>everytime</VALUE>
        </ITEM>
        <CONSTRAINT>
          <DEFAULT>everytime</DEFAULT>
        </CONSTRAINT>
      </SELECT1>
      <SECTION name="Password" multivalued="false" component="true" componentKey="USERGROUP_USER_LOGIN">
        <INPUT>
          <NAME>USERGROUP_USER_PASSWORD</NAME>
          <DESCRIPTION>Password for this account</DESCRIPTION>
          <LONGDESCRIPTION>Windows agent only supports "clear text" entries at the moment</LONGDESCRIPTION>
          <CONSTRAINT>
            <MAYBEEMPTY>true</MAYBEEMPTY>
            <TYPE>masterPassword</TYPE>
            <PASSWORDHASH>linux-shadow-md5,linux-shadow-sha256,linux-shadow-sha512,plain</PASSWORDHASH> 
            <!-- 
            Tell that master password must create other variables derived from the user input from
            that one. The master variable will be created using the hashes defined here, and the derived 
            variable(s) will be automatically  created using other equivalent hashes for the target OS. 
            The accepted values for now are "AIX" and "LINUX" (or both, comma separated). The derived variable name will be the current name 
            postfixed with _AIX (or _LINUX)

            A correspondance is made between hash algo listed above and the matching one on target OS:
            Linux md5 crypt is mapped to AIX "smd5" version, Linux Sha-Crypt-256 is
            mapped to AIX ssha256, and Linux Sha-Crypt-512 to AIX ssha512.
            AIX ssha256 and ssha512 need the JCE PBKDF2WithHmacSHA256 / PBKDF2WithHmacSHA512.

            Caution:
              They are provided on Oracle Java 8 JVM standard installation, but NOT in Java 7 and some 
              other vendor versions.
              In case these algo are not available, a fallback to AIX ssha1 (which uses
              PBKDF2WithHmacSHA1) will be done. This hash scheme is also quite robust, but
              if you want maximum security, you must use for Rudder a JVM which provides the higher
              level algo, like Open JDK 8
            -->
            <AUTOSUBVARIABLES>AIX</AUTOSUBVARIABLES>
          </CONSTRAINT>
        </INPUT>
      </SECTION>
    <SECTION name="UNIX specific options" multivalued="false" component="false" componentKey="USERGROUP_USER_LOGIN">
      <INPUT>
        <NAME>USERGROUP_USER_GROUP</NAME>
        <DESCRIPTION>Primary group for this user (name or number)</DESCRIPTION>
        <LONGDESCRIPTION>On UNIX systems, this group will be applied on this user as the primary group</LONGDESCRIPTION>
        <CONSTRAINT>
          <MAYBEEMPTY>true</MAYBEEMPTY>
        </CONSTRAINT>
      </INPUT>
      <SELECT1>
        <NAME>USERGROUP_FORCE_USER_GROUP</NAME>
        <DESCRIPTION>Enforce the primary group of the user</DESCRIPTION>
        <LONGDESCRIPTION>If set to everytime, the user primary group will be checked or updated even if the user alreay exists. The primary group needs to be a GID (and not a group name)</LONGDESCRIPTION>
        <ITEM>
          <LABEL>At account creation</LABEL>
          <VALUE>false</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Everytime</LABEL>
          <VALUE>true</VALUE>
        </ITEM>
        <CONSTRAINT>
          <DEFAULT>false</DEFAULT>
        </CONSTRAINT>
      </SELECT1>
      <INPUT>
        <NAME>USERGROUP_USER_SECONDARY_GROUPS</NAME>
        <DESCRIPTION>Secondary groups name for this user, comma separated</DESCRIPTION>
        <LONGDESCRIPTION>On UNIX systems, ensure that the user belongs to the list of groups, as secondary groups</LONGDESCRIPTION>
        <CONSTRAINT>
          <MAYBEEMPTY>true</MAYBEEMPTY>
        </CONSTRAINT>
      </INPUT>
      <SELECT1>
        <NAME>USERGROUP_FORCE_USER_SECONDARY_GROUPS</NAME>
        <DESCRIPTION>Enforce the secondary groups of the user</DESCRIPTION>
        <LONGDESCRIPTION>If set to exclusive, the user will belong exactly to the list of secondary groups, otherwise, it may also be in other groups</LONGDESCRIPTION>
        <ITEM>
          <LABEL>Included</LABEL>
          <VALUE>false</VALUE>
        </ITEM>
        <ITEM>
          <LABEL>Exclusive</LABEL>
          <VALUE>true</VALUE>
        </ITEM>
        <CONSTRAINT>
          <DEFAULT>false</DEFAULT>
        </CONSTRAINT>
      </SELECT1>
      <INPUT>
        <NAME>USERGROUP_USER_NAME</NAME>
        <DESCRIPTION>Full name for this account</DESCRIPTION>
        <CONSTRAINT>
          <MAYBEEMPTY>true</MAYBEEMPTY>
        </CONSTRAINT>
      </INPUT>
    <INPUT>
      <NAME>USERGROUP_USER_SHELL</NAME>
      <DESCRIPTION>Shell for this account</DESCRIPTION>
      <LONGDESCRIPTION>Will be used only on UNIX systems</LONGDESCRIPTION>
      <CONSTRAINT>
        <DEFAULT>/bin/bash</DEFAULT>
      </CONSTRAINT>
    </INPUT>
    <INPUT>
      <NAME>USERGROUP_USER_UID</NAME>
      <DESCRIPTION>User ID (enforced at user creation only)</DESCRIPTION>
      <LONGDESCRIPTION>Numeric user id, only on UNIX systems</LONGDESCRIPTION>
      <CONSTRAINT>
        <MAYBEEMPTY>true</MAYBEEMPTY>
      </CONSTRAINT>
    </INPUT>
      <INPUT>
        <NAME>USERGROUP_USER_HOME_PERSONNALIZE</NAME>
        <DESCRIPTION>Use the default home directory</DESCRIPTION>
        <LONGDESCRIPTION>If not checked, it will set the defined home directory if "Policy to apply to this account" if "Create/Update"</LONGDESCRIPTION>
        <CONSTRAINT>
          <TYPE>boolean</TYPE>
          <DEFAULT>true</DEFAULT>
        </CONSTRAINT>
      </INPUT>
      <INPUT>
        <NAME>USERGROUP_USER_HOME_MOVE</NAME>
        <DESCRIPTION>Move the content of previous home directory to the defined one</DESCRIPTION>
        <LONGDESCRIPTION>If checked, it will move the existing home directory to the defined one if they don't match</LONGDESCRIPTION>
        <CONSTRAINT>
          <TYPE>boolean</TYPE>
          <DEFAULT>false</DEFAULT>
        </CONSTRAINT>
      </INPUT>
      <INPUT>
        <NAME>USERGROUP_USER_HOME</NAME>
        <DESCRIPTION>Home directory, if not default</DESCRIPTION>
        <CONSTRAINT>
          <MAYBEEMPTY>true</MAYBEEMPTY>
        </CONSTRAINT>
      </INPUT>
    </SECTION>
    <SECTION name="Home directory" component="true" componentKey="USERGROUP_USER_LOGIN"/>
    <SECTION name="User secondary groups" component="true" componentKey="USERGROUP_USER_LOGIN"/>
    </SECTION>
  </SECTIONS>

</TECHNIQUE>
